name: CICD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  issues: write
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Start Docker Compose
        run: docker compose up -d

      - name: Run Tests
        run: |
          ./scripts/dynamodb/create-table.sh
          go test -v ./...
        env:
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          AWS_DEFAULT_REGION: 'us-west-2'
          DYNAMODB_LOCAL_ENDPOINT: "http://localhost:8000"

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get repo and owner names in lowercase
        id: vars
        run: |
          echo "owner_lc=${OWNER,,}" >> "$GITHUB_OUTPUT"
          echo "repo_lc=${REPO,,}" >> "$GITHUB_OUTPUT"
        env:
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.vars.outputs.owner_lc }}/${{ steps.vars.outputs.repo_lc }}
          tags: |
            type=sha
            type=ref,event=branch
            type=ref,event=pr

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: adeade151592
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          no-cache: true  # prevent GHCR blob reuse issues

  delivery:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get image reference
        id: image
        run: |
          echo "owner_lc=${OWNER,,}" >> "$GITHUB_OUTPUT"
          echo "repo_lc=${REPO,,}" >> "$GITHUB_OUTPUT"
        env:
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}

      - name: Update deployment.yaml
        uses: fjogeleit/yaml-update-action@v0.16.1
        with:
          valueFile: 'deploy/docker-compose.yaml'
          propertyPath: services["user-management-service"].image
          value: ghcr.io/${{ steps.image.outputs.owner_lc }}/${{ steps.image.outputs.repo_lc }}:${{ github.sha }}
          commitChange: ${{ github.event_name != 'pull_request' }}
          targetBranch: main
          masterBranchName: main
          createPR: ${{ github.event_name != 'pull_request' }}
          branch: 'deploy'
          token: ${{ secrets.GITHUB_TOKEN }}
          message: 'Update Image Version to: ${{ github.sha }}'
